{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1ZwSBZ3XI_wE-I4fLWA5wTMNwpfTDz2ov","timestamp":1728553829626}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Введите ваше ФИО:"],"metadata":{"id":"k8oVfdwrMXyc"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"5mcBLsKMI1-5"},"outputs":[],"source":["Копьев Данила Алескандрович"]},{"cell_type":"markdown","source":["***Дисклеймер***\n","\n","В данной практике запрещено использования функций:\n","\n","\n","*   sum()\n","*   min()\n","*   max()\n","*   average()\n","*   reversed()\n","*   sorted()\n","*   готовые функции или библиотеки\n"],"metadata":{"id":"8HbYUbm3Jw3o"}},{"cell_type":"markdown","source":["\n","**Задача 1:**\n","\n","\n","\n","Интернет-магазин предлагает следующие условия скидок:\n","\n","*   Для заказов больше 1000 единиц, клиент получает скидку 5%. Если клиент использует промокод SUPERDISCOUNT, он получает скидку 10% (вместо 5%).\n","*  Для заказов более 5000 единиц, клиент получает скидку 15%, а использование промокода SUPERDISCOUNT увеличивает скидку до 20% (вместо 15%).\n","\n","Этап 1:\n","Ввод:\n","```\n","Введите стоимость единицы товара: 5\n","Введите количество товара: 1001\n","Введите промокод: GiVEMEDISCONT\n","```\n","\n","Вывод:\n","\n","```\n","Ваша скидка: 5%\n","Итоговая сумма: 4754.75\n","```\n","Этап 2:\n","\n","Оформите ваш код в виде функции"],"metadata":{"id":"HmX0c6YPJSQr"}},{"cell_type":"code","source":["while True:\n","\n","\n","  def shop(cost, count, promo):\n","    if count > 1000:\n","      if 'SUPERDISCOUNT' in promo:\n","        print(f'\\nВаша скидка: 10%\\nИтоговая сумма: {count * cost * 0.9}')\n","      else:\n","        print(f'\\nВаша скидка: 5%\\nИтоговая сумма: {count * cost * 0.95}')\n","    elif count > 5000:\n","      if 'SUPERDISCOUNT' in promo:\n","        print(f'\\nВаша скидка: 20%\\nИтоговая сумма: {count * cost * 0.8}')\n","      else:\n","        print(f'\\nВаша скидка: 15%\\nИтоговая сумма: {count * cost * 0.85}')\n","    else:\n","      print(f'\\nВаша скидка: 0%\\nИтоговая сумма: {count * cost}')\n","    return\n","  shop(cost, count, promo)\n","\n","\n","  cost = int(input('Введите стоимость единицы товара: '))\n","  count = int(input('Введите количество товара: '))\n","  promo = input('Введите промокод: ')"],"metadata":{"id":"OAIMIpklMN5D","colab":{"base_uri":"https://localhost:8080/","height":551},"executionInfo":{"status":"error","timestamp":1728555088254,"user_tz":-300,"elapsed":8342,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}},"outputId":"7b344727-526c-40a7-fc03-e414146bcd0e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Ваша скидка: 10%\n","Итоговая сумма: 4504.5\n","Введите стоимость единицы товара: 5\n","Введите количество товара: 1001\n","Введите промокод: \n","\n","Ваша скидка: 5%\n","Итоговая сумма: 4754.75\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-7639881af69c>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     19\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     20\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 21\u001b[0;31m   \u001b[0mcost\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Введите стоимость единицы товара: '\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     22\u001b[0m   \u001b[0mcount\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Введите количество товара: '\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     23\u001b[0m   \u001b[0mpromo\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Введите промокод: '\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}]},{"cell_type":"markdown","source":["**Задача 2:**\n","\n","Этап 1:\n","Напишите программу способную отфильтровать список и вывести только положительные элементы\n","\n","\n","Ввод:\n","```\n","-1 5 1 2 -3\n","```\n","\n","Вывод:\n","\n","```\n","5 1 2\n","```\n","\n","Этап 2:\n","\n","Оформите ваш код в виде функции"],"metadata":{"id":"eeRVWpuLNGJ0"}},{"cell_type":"code","source":["def number_filter(numbers):\n","  i = 0\n","  while i != len(numbers):\n","    if int(numbers[i]) <= 0:\n","      numbers.remove(numbers[i])\n","    else:\n","      i += 1\n","  return numbers\n","\n","\n","numbers = input().split(' ')\n","x = number_filter(numbers)\n","print(' '.join(x))"],"metadata":{"id":"Xbi6bL0WOE9N","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728556127205,"user_tz":-300,"elapsed":9415,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}},"outputId":"c4d5916d-37d6-4a87-c938-a6b7fc2fb5be"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["7 7 7 999 -999 -1 -1 0 0 11111\n","7 7 7 999 11111\n"]}]},{"cell_type":"markdown","source":["**Задача 3:**\n","\n","Этап 1:\n","Напишите программу реализующую Алгоритм Евклида\n","\n","\n","> Алгоритм Евклида – это алгоритм нахождения наибольшего общего делителя (НОД) пары целых чисел.\n","\n","\n","\n","Ввод:\n","```\n","30 18\n","```\n","\n","Вывод:\n","\n","```\n","6\n","```\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n"],"metadata":{"id":"lV-w6G-POa6F"}},{"cell_type":"code","source":["def gcd(a, b):\n","    while b != 0:\n","        a, b = b, a % b\n","    return a\n","\n","\n","numbers = input().split(' ')\n","result = gcd(int(numbers[0]), int(numbers[1]))\n","print(f\"НОД({numbers[0]}, {numbers[1]}) = {result}\")"],"metadata":{"id":"43Dl5tIpOZsu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728638908296,"user_tz":-300,"elapsed":2629,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}},"outputId":"62eab822-87dc-4c74-ced8-afc6cdc0aaef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["18 30\n","НОД(18, 30) = 6\n"]}]},{"cell_type":"markdown","source":["**Задача 4:**\n","\n","Этап 1:\n","Напишите функцию программу, которая принимает строку и возвращает список слов и количество их упомнинаний в предложении\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n","\n","Ввод:\n","```\n","apple banana apple\n","```\n","\n","Вывод:\n","\n","```\n","apple: 2,\n","banana: 1\n","```"],"metadata":{"id":"WIfPFxpsO0zL"}},{"cell_type":"code","source":["def word_order(words):\n","    unique_words = []\n","    counts = []\n","\n","    for word in words:\n","        if word in unique_words:\n","            index = unique_words.index(word)\n","            counts[index] += 1\n","        else:\n","            unique_words.append(word)\n","            counts.append(1)\n","\n","\n","    for i in range(len(unique_words)):\n","        end_char = ',' if i < len(unique_words) - 1 else ''\n","        print(f'{unique_words[i]}: {counts[i]}{end_char}')\n","    return\n","\n","\n","words = input('Введите слова через пробел: ').split(' ')\n","word_order(words)"],"metadata":{"id":"DgsmFeW5Po_x","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728639357421,"user_tz":-300,"elapsed":10376,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}},"outputId":"67b72fe5-357f-4510-9494-e2a63c1f8155"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите слова через пробел: apple banana apple GOYDA\n","apple: 2,\n","banana: 1,\n","GOYDA: 1\n"]}]},{"cell_type":"markdown","source":["**Задача 5:**\n","\n","Этап 1:\n","Детектор анаграмм Напишите программу на Python, которая принимает в качестве входных данных две строки и проверяет, являются ли они анаграммами друг друга\n","\n","Этап 2:\n","Оформите ваш код в виде функции\n","\n","Ввод:\n","```\n","listen, silent\n","```\n","\n","Вывод:\n","\n","```\n","True\n","```"],"metadata":{"id":"5BmIJLUZP9I-"}},{"cell_type":"code","source":["def detect(word_1, word_2):\n","    if len(word_1) != len(word_2):\n","        print('False')\n","        return\n","\n","\n","    count_1 = {}\n","    count_2 = {}\n","\n","\n","    for char in word_1:\n","        count_1[char] = count_1.get(char, 0) + 1\n","\n","    for char in word_2:\n","        count_2[char] = count_2.get(char, 0) + 1\n","\n","\n","    if count_1 == count_2:\n","        print('True')\n","    else:\n","        print('False')\n","    return\n","\n","\n","word = input('Введите два слова через запятую: ').split(', ')\n","word_1 = list(word[0])\n","word_2 = list(word[1])\n","detect(word_1, word_2)"],"metadata":{"id":"7LNW8DuHQJwH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728642204760,"user_tz":-300,"elapsed":5005,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}},"outputId":"7afeffd6-2c85-4ddc-8bef-1ffddac8f1f9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите два слова через запятую: пизда, адзип\n","True\n"]}]},{"cell_type":"markdown","source":["**Задача 6:**\n","\n","Шифр ​​Цезаря\n","\n","Напишите программу на Python, которая реализует шифр Цезаря, простой метод шифрования, который заменяет каждую букву буквой на фиксированное количество позиций вниз по алфавиту. Программа должна запрашивать у пользователя сообщение и значение сдвига, а затем шифровать и расшифровывать сообщение.\n","\n","Этап 1:\n","\n","Напишите код для реализации данной задачи\n","\n","Этап 2:\n","\n","Оформите код в виде нескольких функций:\n","\n","* Зашифровывает сообщение\n","* Расшифровывает сообщение"],"metadata":{"id":"-SIWYSq2QKBh"}},{"cell_type":"code","source":["def code(text, space, shifted_text):\n","  for char in text:\n","    if char in letters:\n","        index = letters.index(char)\n","        new_index = (index + space) % len(letters)\n","        shifted_text.append(letters[new_index])\n","    else:\n","        shifted_text.append(char)\n","  return shifted_text\n","\n","\n","letters = ['а', 'б', 'в', 'г', 'д', 'е',\n","           'ё', 'ж', 'з', 'и', 'й', 'к',\n","           'л', 'м', 'н', 'о', 'п', 'р',\n","           'с', 'т', 'у', 'ф', 'х', 'ц',\n","           'ч', 'ш', 'щ', 'ъ', 'ы', 'ь',\n","           'э', 'ю', 'я']\n","text = list(input('Введите сообщение: ').lower())\n","space = int(input('Введите значение сдвига: ')) % len(letters)\n","shifted_text = []\n","\n","\n","fin = code(text, space, shifted_text)\n","print(''.join(fin))\n","\n"],"metadata":{"id":"anThYirsQe6N","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728637876703,"user_tz":-300,"elapsed":6059,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}},"outputId":"b0680ea3-fe8f-40ee-c55c-f037e3c46670"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите сообщение: бля саси\n","Введите значение сдвига: 6\n","жсе чёчо\n"]}]},{"cell_type":"markdown","source":["**Задача 7**\n","\n","Задача: «Банковская система»\n","\n","Создайте программу Python, которая имитирует базовую банковскую систему. Система должна иметь следующие функции:\n","\n","Требования\n","*   Система должна позволять клиентам создавать счета и хранить их балансы.\n","*   Система должна позволять клиентам вносить и снимать деньги со своих счетов.\n","*   Система должна позволять клиентам проверять свой текущий баланс.\n","*   Система должна позволять клиентам переводить деньги между счетами.\n","*   Система должна отслеживать транзакции (депозиты, снятия и переводы) и иметь возможность печатать детали транзакций.\n","\n","\n","Задачи\n","1. Реализуйте банковскую систему, используя только базовые конструкции Python, такие как def, lists, if, elif и else, без классов или словарей.\n","Определите функции для создания счетов, внесения и снятия денег, получения балансов счетов, перевода денег между счетами, а также создания и печати транзакций.\n","2. Напишите основную функцию, которая демонстрирует использование банковской системы путем создания счетов, внесения и снятия денег и перевода денег между счетами.\n","3. Бонусное задание\n","Реализуйте способ хранения и печати истории транзакций для каждого счета.\n","\n","Ограничения\n","Не используйте классы или словари.\n","Используйте только базовые конструкции Python, такие как def, lists, if, elif и else.\n"],"metadata":{"id":"avFZRRXrQz9O"}},{"cell_type":"code","source":["def action___1(action_1_1):\n","    while action_1_1 != 2:\n","        print('\\n1. Создание банковского счета\\n'\n","        '2. Вернуться в главное меню\\n')\n","        action_1_1 = int(input('Введите порядковый номер нужного вам действия из перечисленных выше: '))\n","        if action_1_1 == 1:\n","            action_1_1_1 = input('\\nВведите название счета: ')\n","            accounts.append(action_1_1_1)\n","            money_in_accounts.append([])\n","            print('Ваш счет успешно создан!\\n')\n","        elif action_1_1 == 2:\n","            break\n","    return\n","\n","\n","def action___2(action_1_2):\n","    while action_1_2 != 2:\n","                print('\\n1. Выбрать счет для пополнения\\n'\n","                '2. Вернуться в главное меню\\n')\n","                action_1_2 = int(input('Введите порядковый номер нужного вам действия из перечисленных выше: '))\n","                if action_1_2 == 1:\n","                    for i in range(len(accounts)):\n","                        print(f'{i + 1}.{accounts[i]}')\n","                    action_1_2_1 = int(input('\\nВыберите порядковый номер счета для пополнения: '))\n","                    action_1_2_2 = int(input('\\nВведите сумму для пополнения данного счета (в рублях): '))\n","                    money_in_accounts[action_1_2_1 - 1].append(action_1_2_2)\n","                    print('\\nВаш счет успешно пополнен!')\n","                elif action_1_2 == 2:\n","                    break\n","    return\n","\n","\n","def action___3(action_1_3):\n","    while action_1_3 != 2:\n","            print('\\n1. Выбрать счет для снятия\\n'\n","            '2. Вернуться в главное меню\\n')\n","            action_1_3 = int(input('Введите порядковый номер нужного вам действия из перечисленных выше: '))\n","            if action_1_3 == 1:\n","                for i in range(len(accounts)):\n","                    print(f'{i + 1}.{accounts[i]}')\n","                action_1_3_1 = int(input('\\nВыберите порядковый номер счета для снятия: '))\n","                action_1_3_2 = int(input('\\nВведите сумму для снятия средств со счета (в рублях): '))\n","                money_in_accounts[action_1_3_1 - 1].append(action_1_3_2 * -1)\n","                print('\\nС вашего счета успешно сняты денежные средства!')\n","            elif action_1_3 == 2:\n","                break\n","    return\n","\n","\n","def action___4(action_1_4):\n","    while action_1_4 != 2:\n","        print('\\n1. Проверка баланса выбранного счета\\n'\n","        '2. Вернуться в главное меню\\n')\n","        action_1_4 = int(input('Введите порядковый номер нужного вам действия из перечисленных выше: '))\n","        if action_1_4 == 1:\n","            for i in range(len(accounts)):\n","                print(f'{i + 1}.{accounts[i]}')\n","            action_1_4_1 = int(input('\\nВыберите порядковый номер счета для просмотра баланса: '))\n","            print(f'Баланс счета №{action_1_4_1} составляет {sum(money_in_accounts[action_1_4_1 - 1])} рублей')\n","        elif action_1_4 == 2:\n","            break\n","    return\n","\n","\n","def action___5(action_1_5):\n","    while action_1_5 != 2:\n","        print('\\n1. Выбор счета для снятия и дальнейшего перевода денежных средств\\n'\n","        '2. Вернуться в главное меню\\n')\n","        action_1_5 = int(input('Введите порядковый номер нужного вам действия из перечисленных выше: '))\n","        if action_1_5 == 1:\n","            for i in range(len(accounts)):\n","                print(f'{i + 1}.{accounts[i]}')\n","            action_1_5_1 = int(input('\\nВыберите порядковый номер счета для снятия денежных средств: '))\n","            action_1_5_2 = int(input('\\nВыберите порядковый номер счета для пополнения денежных средств: '))\n","            action_1_5_3 = int(input('\\nВведите сумму денежных средств для перевода: '))\n","            money_in_accounts[action_1_5_2 - 1].append(action_1_5_3)\n","            money_in_accounts[action_1_5_1 - 1].append(action_1_5_3 * -1)\n","            print('Перевод успешно выполнен!')\n","        elif action_1_5 == 2:\n","            break\n","    return\n","\n","\n","def action___6():\n","  return\n","\n","\n","def body(action_1):\n","    if action_1 == 1:\n","        action___1(action_1_1)\n","    elif action_1 == 2:\n","        action___2(action_1_2)\n","    elif action_1 == 3:\n","        action___3(action_1_3)\n","    elif action_1 == 4:\n","        action___4(action_1_4)\n","    elif action_1 == 5:\n","        action___5(action_1_5)\n","\n","\n","accounts = list()\n","money_in_accounts = list()\n","\n","\n","while True:\n","    print('Вас приветствует банковская система \\\"X-BANK\\\"\\n\\n'\n","    'Я способна выполнять следующие действия:\\n'\n","    '1. Создание банковского счета\\n'\n","    '2. Внесение денежных средств на любой счет\\n'\n","    '3. Снятие денежнных средств с любого счета\\n'\n","    '4. Проверка баланса\\n'\n","    '5. Перевод денежных средств между счетами\\n'\n","    '6. Просмотр истории транзакций\\n')\n","    action_1 = int(input('Введите порядковый номер нужного вам действия из перечисленных выше: '))\n","    action_1_1 = 0\n","    action_1_2 = 0\n","    action_1_3 = 0\n","    action_1_4 = 0\n","    action_1_5 = 0\n","    body(action_1)\n","\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":570},"id":"dWEW10zIRwjs","outputId":"cabd8a60-0ee9-49d7-9952-54ca1001d67e","executionInfo":{"status":"error","timestamp":1728745942451,"user_tz":-300,"elapsed":6279,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}}},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Вас приветствует банковская система \"X-BANK\"\n","\n","Я способна выполнять следующие действия:\n","1. Создание банковского счета\n","2. Внесение денежных средств на любой счет\n","3. Снятие денежнных средств с любого счета\n","4. Проверка баланса\n","5. Перевод денежных средств между счетами\n","6. Просмотр истории транзакций\n","\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-1a9ae63f2ce8>\u001b[0m in \u001b[0;36m<cell line: 105>\u001b[0;34m()\u001b[0m\n\u001b[1;32m    112\u001b[0m     \u001b[0;34m'5. Перевод денежных средств между счетами\\n'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    113\u001b[0m     '6. Просмотр истории транзакций\\n')\n\u001b[0;32m--> 114\u001b[0;31m     \u001b[0maction_1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Введите порядковый номер нужного вам действия из перечисленных выше: '\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    115\u001b[0m     \u001b[0maction_1_1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    116\u001b[0m     \u001b[0maction_1_2\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}]},{"cell_type":"code","source":["''"],"metadata":{"id":"_0E0NYLrHxXv"},"execution_count":null,"outputs":[]}]}