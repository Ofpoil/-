{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1bbYGdWi_dKiB0HoLFBXxshe_0yemJtea","timestamp":1729762806344}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"tKNG_RzWxG6g"}},{"cell_type":"markdown","source":["# **Дисклеймер**\n","\n","В данной практике будет введен дополнительный критерий: чистота и читаемость кода, а также соблюдение правил описанных в начале практики"],"metadata":{"id":"cFcrKfclKWh0"}},{"cell_type":"code","source":["Копьев Данила Александрович"],"metadata":{"id":"0xI5DxCj5mkR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"0SnE87X1xDlV"}},{"cell_type":"markdown","source":["# Задание 1\n","\n","**Задача:**\n","\n","Напишите функцию очищающий список от дубликтов\n","\n","\n","*Запрещено:*\n","\n","*   Использовать set() или готовые функции очищающие список от дубликатов\n","\n","Вввод:\n","\n","```\n","apple banana apple 1 3 4 4 5\n","```\n","\n","\n","Вывод:\n","\n","```\n","apple banana 1 3 4 5\n","```\n","\n"],"metadata":{"id":"VxawR9NubT_F"}},{"cell_type":"code","source":["def checking():\n","  new_list = []\n","  for i in list_of_words:\n","    if i not in new_list:\n","      new_list.append(i)\n","    else:\n","      None\n","  print(new_list)\n","  return\n","\n","\n","list_of_words = input().split(\" \")\n","\n","\n","checking()"],"metadata":{"id":"ml5gnbPXbeju","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729764094995,"user_tz":-300,"elapsed":2595,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}},"outputId":"9e289da4-44e4-4200-8bc3-e730bece8eff"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["apple banana apple 1 3 4 4 5\n","['apple', 'banana', '1', '3', '4', '5']\n"]}]},{"cell_type":"markdown","source":["# Задание 2\n","\n","**Задача:**\n","\n","Написать функцию для нахождения простых чисел в диапазоне\n","\n","Ввод:\n","\n","```\n","10, 50\n","```\n","\n","Вывод:\n","\n","```\n","11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47\n","```"],"metadata":{"id":"y05x0eD0cVCC"}},{"cell_type":"code","source":["def prime_numbers(num1, num2):\n","  list1 = []\n","  for n in range(num1, num2+1):\n","    cnt = 0\n","    for i in range(1, n+1):\n","      if n % i == 0:\n","        cnt += 1\n","    if cnt == 2:\n","      list1.append(n)\n","  return list1\n","\n","\n","num1 = int(input(\"Введите первое число: \"))\n","num2 = int(input(\"Введите второе число: \"))\n","print(prime_numbers(num1, num2))"],"metadata":{"id":"XSMJnLgrc6Bf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729766584411,"user_tz":-300,"elapsed":6722,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}},"outputId":"901ac295-580d-4c2e-d5dc-b5cebbfa5d17"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите первое число: 4\n","Введите второе число: 673\n","[5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673]\n"]}]},{"cell_type":"markdown","source":["# Задание 3\n","\n","Напишите функцию для объединения двух списков (список ключей и список значении) в словарь\n","\n","*Запрещено:*\n","\n","*   Использования готовых функции для объединения списков (пример: zip() )\n","\n","Дано:\n","\n","```\n","keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","```\n","\n","Вывод:\n","```\n","{'a': 1, 'b': 2, 'c': 3, 'e': 4}\n","```\n","\n","\n"],"metadata":{"id":"vYM0LyxxdElN"}},{"cell_type":"code","source":["def joining():\n","  for i in range(len(keys)):\n","    dictt[keys[i]] = str(values[i])\n","  print(dictt)\n","\n","\n","joining()\n","\n","\n","keys = ['a', 'b', 'c', 'e' ]\n","values = [1, 2, 3, 4]\n","dictt = {}\n"],"metadata":{"id":"CRvhHTjCdvjS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729768725480,"user_tz":-300,"elapsed":323,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}},"outputId":"e072c320-f560-4939-d93a-2728c2c6798f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'a': '1', 'b': '2', 'c': '3', 'e': '4'}\n"]}]},{"cell_type":"markdown","source":["# Задание 4\n","\n","Напишите функцию(ии) для подсчета статистических параметров:\n","*   Сумму\n","*   Среднее арифметическое\n","*   Медиану\n","*   Моду\n","\n","\n","*Запрещено:*\n","\n","*   sum()\n","*   sorted()\n","*   и других функции предоставляющих готовое решение задания\n","\n","Дано:\n","\n","```\n","numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]\n","\n","```\n","\n","Вывод:\n","```\n","{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}\n","```\n"],"metadata":{"id":"L_w8H8i-fQcP"}},{"cell_type":"code","source":["def summ(numbers):\n","  summ_new = 0\n","  for i in numbers:\n","    summ_new += numbers[i]\n","  print(summ_new - 1)\n","  return\n","\n","\n","def average(numbers):\n","  summ_new_1 = 0\n","  k = 0\n","  for j in numbers:\n","    summ_new_1 += numbers[j]\n","    k += 1\n","  print(summ_new_1 / k)\n","\n","\n","def find_median(numbers):\n","  if len(numbers) % 2 == 0:\n","    median = len(numbers) / 2\n","  else:\n","    median = (len(numbers) - 1) / 2\n","  print(median)\n","  return\n","\n","\n","def find_mode(numbers):\n","\n","  return\n","\n","\n","\n","\n","numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]\n","\n","\n","summ(numbers)\n","\n","\n","find_median(numbers)\n","\n","\n","average(numbers)\n"],"metadata":{"id":"dW6jW_rjfuba","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729770497391,"user_tz":-300,"elapsed":299,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}},"outputId":"b000c48f-3c2f-4b4d-bc2f-c92c72799f1c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["57\n","5.0\n","5.2727272727272725\n"]}]},{"cell_type":"markdown","source":["# Задание 5\n","\n","На ввод поступает строка символов. Строка состоит из слов, которые отделены друг от друга пробелами. Необходимо вывести самое длинное слово и его порядковый номер.\n","\n","*Запрещено:*\n","\n","*   len()\n","\n","Дано:\n","\n","```\n","Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.\n","\n","```\n","\n","Вывод:\n","```\n","Самое длинное слово с номером 5: обязательны\n","```"],"metadata":{"id":"hZW0NZ7SgTcp"}},{"cell_type":"code","source":["def count_symbols(words):\n","    count_dict = { }\n","    for word in words:\n","        count = 0\n","        for symbol in word:\n","            count += 1\n","        count_dict[word] = count\n","\n","    return count_dict\n","\n","\n","def find_max(dict_):\n","    max_k = 0\n","    max_v = 0\n","    for k, v in dict_.items():\n","        if v > max_v:\n","            max_k = k\n","            max_v = v\n","\n","    return max_k\n","\n","string = 'Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.'\n","words = string.split(' ')\n","dict_ = count_symbols(words)\n","max_word = find_max(dict_)\n","print(max_word)"],"metadata":{"id":"rC5DpHHLsDYp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730197510994,"user_tz":-300,"elapsed":687,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}},"outputId":"657b7ae7-0a49-4974-db08-e25a4b9d1749"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["обязательны\n"]}]},{"cell_type":"markdown","source":["# Задание 6\n","\n","Напишите программу, для управления оценками студентов, со следующими функциями:\n","\n","* Добавление информации о студенте и его оценках.\n","* Подсчет среднего балла студента.\n","* Получение списка всех студентов с их средними баллами.\n","* Поиск студента по имени и вывод его оценок и среднего балла.\n","\n","\n","\n"],"metadata":{"id":"k5BzJW5ZeaQN"}},{"cell_type":"code","source":["def add_student(students, name):\n","    if name not in students:\n","        students[name] = []\n","        print(f\"Студент '{name}' успешно добавлен.\")\n","    else:\n","        print(f\"Студент '{name}' уже существует.\")\n","\n","def add_grade(students, name, grade):\n","    if name in students:\n","        students[name].append(grade)\n","        print(f\"Оценка {grade} добавлена для студента '{name}'.\")\n","    else:\n","        print(f\"Студент '{name}' не найден.\")\n","\n","def calculate_average(grades):\n","    if grades:\n","        return sum(grades) / len(grades)\n","    return 0\n","\n","def get_average_grades(students):\n","    averages = {}\n","    for name, grades in students.items():\n","        averages[name] = calculate_average(grades)\n","    return averages\n","\n","def find_student(students, name):\n","    if name in students:\n","        grades = students[name]\n","        average = calculate_average(grades)\n","        return name, grades, average\n","    return None\n","\n","def main_menu():\n","    print(\"\\nМеню действий:\")\n","    print(\"1. Добавить студента\")\n","    print(\"2. Добавить оценку\")\n","    print(\"3. Показать средние баллы студентов\")\n","    print(\"4. Найти студента по имени\")\n","    print(\"5. Выход\")\n","\n","def main():\n","    students = {}\n","    while True:\n","        main_menu()\n","        choice = input(\"Выберите действие (1-5): \")\n","\n","        if choice == '1':\n","            name = input(\"Введите имя студента: \")\n","            add_student(students, name)\n","\n","        elif choice == '2':\n","            name = input(\"Введите имя студента: \")\n","            grade = float(input(\"Введите оценку: \"))\n","            add_grade(students, name, grade)\n","\n","        elif choice == '3':\n","            average_grades = get_average_grades(students)\n","            print(\"Средние баллы студентов:\", average_grades)\n","\n","        elif choice == '4':\n","            name = input(\"Введите имя студента: \")\n","            student_info = find_student(students, name)\n","            if student_info:\n","                name, grades, average = student_info\n","                grades_str = \", \".join(map(str, grades))\n","                print(f\"Информация о студенте:\\nИмя: {name}; Оценки: {grades_str}; Средний балл: {average:.2f}.\")\n","            else:\n","                print(\"Студент не найден.\")\n","\n","        elif choice == '5':\n","            print(\"Выход из программы.\")\n","            break\n","\n","        else:\n","            print(\"Некорректный выбор, пожалуйста, выберите число от 1 до 5.\")\n","\n","if __name__ == \"__main__\":\n","    main()"],"metadata":{"id":"cvhlltVbdyoL","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"error","timestamp":1730198138584,"user_tz":-300,"elapsed":42743,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}},"outputId":"09e076cf-89e8-40f3-b79d-066c4699c111"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Меню действий:\n","1. Добавить студента\n","2. Добавить оценку\n","3. Показать средние баллы студентов\n","4. Найти студента по имени\n","5. Выход\n","Выберите действие (1-5): 1\n","Введите имя студента: Годзилла\n","Студент 'Годзилла' успешно добавлен.\n","\n","Меню действий:\n","1. Добавить студента\n","2. Добавить оценку\n","3. Показать средние баллы студентов\n","4. Найти студента по имени\n","5. Выход\n","Выберите действие (1-5): 2\n","Введите имя студента: Годзилла\n","Введите оценку: 5\n","Оценка 5.0 добавлена для студента 'Годзилла'.\n","\n","Меню действий:\n","1. Добавить студента\n","2. Добавить оценку\n","3. Показать средние баллы студентов\n","4. Найти студента по имени\n","5. Выход\n","Выберите действие (1-5): 2\n","Введите имя студента: Годзилла\n","Введите оценку: 1\n","Оценка 1.0 добавлена для студента 'Годзилла'.\n","\n","Меню действий:\n","1. Добавить студента\n","2. Добавить оценку\n","3. Показать средние баллы студентов\n","4. Найти студента по имени\n","5. Выход\n","Выберите действие (1-5): 4\n","Введите имя студента: Годзилла\n","Информация о студенте:\n","Имя: Годзилла; Оценки: 5.0, 1.0; Средний балл: 3.00.\n","\n","Меню действий:\n","1. Добавить студента\n","2. Добавить оценку\n","3. Показать средние баллы студентов\n","4. Найти студента по имени\n","5. Выход\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-9395f710e6f8>\u001b[0m in \u001b[0;36m<cell line: 77>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     76\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     77\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0m__name__\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"__main__\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 78\u001b[0;31m     \u001b[0mmain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-3-9395f710e6f8>\u001b[0m in \u001b[0;36mmain\u001b[0;34m()\u001b[0m\n\u001b[1;32m     43\u001b[0m     \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     44\u001b[0m         \u001b[0mmain_menu\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 45\u001b[0;31m         \u001b[0mchoice\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Выберите действие (1-5): \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     46\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     47\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mchoice\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'1'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}]},{"cell_type":"markdown","source":["# Задание 7\n","\n","\n","**Задача:**\n","\n","Создайте приложение-викторину с командной строкой, которое задает пользователям вопросы по различным темам и отслеживает их результаты.\n","\n","Ключевые особенности:\n","\n","*   Хранение данных о вопросах и ответах на них, а также баллов за каждый вопрос\n","*   Реализуйте функцию для представления вопросов, принятия ответов пользователей и предоставления обратной связи о том, являются ли ответы правильными или неправильными.\n","*  После завершения викторины отобразите общий балл пользователя из числа ответов на вопросы.\n","*  Реализуйте функцию добавления нового вопроса\n","*  Реализуйте функцию перемешивания вопросов, для отображения случайного вопроса\n"],"metadata":{"id":"iQ8Z-7PYgu1_"}},{"cell_type":"code","source":["import random\n","\n","def add_question(questions, question, answer):\n","    questions.append({'question': question, 'answer': answer})\n","\n","def shuffle_questions(questions):\n","    random.shuffle(questions)\n","\n","def ask_questions(questions):\n","    score = 0\n","    results = []\n","\n","    for index, q in enumerate(questions):\n","        user_answer = input(f\"{index + 1}. {q['question']} \")\n","        if user_answer.lower() == q['answer'].lower():\n","            print(\"Правильно!\")\n","            score += 1\n","            results.append(f\"Вопрос номер {index + 1} - 1 балл\")\n","        else:\n","            print(\"Неправильно. Правильный ответ:\", q['answer'])\n","            results.append(f\"Вопрос номер {index + 1} - 0 баллов\")\n","\n","    return score, results\n","\n","def display_score(score, total_questions, results):\n","    print(\"\\nРезультаты последней викторины:\")\n","    for result in results:\n","        print(result)\n","    print(f\"Итого: {score}/{total_questions} баллов\\n\")\n","\n","def main():\n","    questions = [\n","        {\"question\": \"Какой цвет травы?\", \"answer\": \"Зеленый\"},\n","        {\"question\": \"Сколько ног у паука?\", \"answer\": \"Восемь\"},\n","        {\"question\": \"Что у коровы на лбу?\", \"answer\": \"Рога\"},\n","        {\"question\": \"Какой океан самый большой?\", \"answer\": \"Тихий\"},\n","        {\"question\": \"Кто царь животных?\", \"answer\": \"Лев\"}\n","    ]\n","\n","    last_results = []\n","\n","    while True:\n","        print(\"Выберите действие:\")\n","        print(\"1. Начать викторину\")\n","        print(\"2. Добавить вопрос\")\n","        print(\"3. Перемешать вопросы\")\n","        print(\"4. Посмотреть результаты последней викторины\")\n","        print(\"0. Выход\")\n","\n","        choice = input(\"Введите номер действия: \")\n","\n","        if choice == '1':\n","            if not questions:\n","                print(\"Нет доступных вопросов для викторины. Пожалуйста, добавьте вопросы.\")\n","                continue\n","\n","            print(\"Добро пожаловать в викторину! Ответьте на следующие вопросы:\")\n","            score, last_results = ask_questions(questions)\n","            display_score(score, len(questions), last_results)\n","\n","        elif choice == '2':\n","            question = input(\"Введите вопрос: \")\n","            answer = input(\"Введите ответ (одним словом): \")\n","            add_question(questions, question, answer)\n","\n","        elif choice == '3':\n","            shuffle_questions(questions)\n","            print(\"Вопросы перемешаны.\")\n","\n","        elif choice == '4':\n","            if last_results:\n","                display_score(last_results.count('1 балл'), len(last_results), last_results)\n","            else:\n","                print(\"Нет результатов для отображения.\")\n","\n","        elif choice == '0':\n","            print(\"Выход из викторины.\")\n","            break\n","\n","        else:\n","            print(\"Некорректный ввод, пожалуйста, попробуйте снова.\")\n","\n","if __name__ == \"__main__\":\n","    main()"],"metadata":{"id":"DhxyYwHwh2V4","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"error","timestamp":1730199295938,"user_tz":-300,"elapsed":156869,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}},"outputId":"f62c2ca6-75bb-4eb1-bb6e-28690b7368d6"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Выберите действие:\n","1. Начать викторину\n","2. Добавить вопрос\n","3. Перемешать вопросы\n","4. Посмотреть результаты последней викторины\n","0. Выход\n","Введите номер действия: 2\n","Введите вопрос: сосал?\n","Введите ответ (одним словом): да\n","Выберите действие:\n","1. Начать викторину\n","2. Добавить вопрос\n","3. Перемешать вопросы\n","4. Посмотреть результаты последней викторины\n","0. Выход\n","Введите номер действия: 1\n","Добро пожаловать в викторину! Ответьте на следующие вопросы:\n","1. Какой цвет травы? знлнгый\n","Неправильно. Правильный ответ: Зеленый\n","2. Сколько ног у паука? 8\n","Неправильно. Правильный ответ: Восемь\n","3. Что у коровы на лбу? хуй\n","Неправильно. Правильный ответ: Рога\n","4. Какой океан самый большой? тихий\n","Правильно!\n","5. Кто царь животных? лев\n","Правильно!\n","6. сосал? да\n","Правильно!\n","\n","Результаты последней викторины:\n","Вопрос номер 1 - 0 баллов\n","Вопрос номер 2 - 0 баллов\n","Вопрос номер 3 - 0 баллов\n","Вопрос номер 4 - 1 балл\n","Вопрос номер 5 - 1 балл\n","Вопрос номер 6 - 1 балл\n","Итого: 3/6 баллов\n","\n","Выберите действие:\n","1. Начать викторину\n","2. Добавить вопрос\n","3. Перемешать вопросы\n","4. Посмотреть результаты последней викторины\n","0. Выход\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"Interrupted by user","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-8-98d3511c64d7>\u001b[0m in \u001b[0;36m<cell line: 83>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     82\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     83\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0m__name__\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"__main__\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 84\u001b[0;31m     \u001b[0mmain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-8-98d3511c64d7>\u001b[0m in \u001b[0;36mmain\u001b[0;34m()\u001b[0m\n\u001b[1;32m     48\u001b[0m         \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"0. Выход\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     49\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 50\u001b[0;31m         \u001b[0mchoice\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Введите номер действия: \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     51\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     52\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mchoice\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'1'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}]}]}