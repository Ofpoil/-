{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1l_GPJjnpKNgfxCGYwBYdhk5eQjOdijks","timestamp":1730368269819}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Ссылка на материалы:  [пдф тут](https://drive.google.com/file/d/16Cm2tgrpuDH8eIdxdSYyOsfDPqnJ3byd/view?usp=sharing)"],"metadata":{"id":"M9IlAZAPBBm9"}},{"cell_type":"markdown","source":["ФИО:"],"metadata":{"id":"ZLVI_WIcuT56"}},{"cell_type":"code","source":["Копьев Данила Александрович"],"metadata":{"id":"3AfG_Tal0P2S"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Задание 1. HTTP-запросы, ответы и погода"],"metadata":{"id":"Gtm1UjYgDlY7"}},{"cell_type":"markdown","source":["Описание:\n","\n","Напишите HTTP-запрос для получения информации о погоде в введенном городе из API.\n","\n","Можно использовать API: https://open-meteo.com/. Используйте метод GET.\n","\n","\n","Ввод\n","```\n","56.50, 60.35\n","```\n","\n","Вывод\n","```\n","Сегодня (1.11) погода 20 ◦С, нет осадков, туман\n","```\n","\n","\n","\n"],"metadata":{"id":"FtjnLNIKzfMZ"}},{"cell_type":"code","source":["import requests\n","from datetime import datetime\n","\n","\n","# функция отправки запроса\n","def send_request(url):\n","    response = requests.get(url)\n","\n","    status_code = response.status_code\n","    if status_code == 200:\n","        return response.json()\n","    return None\n","\n","\n","def clear_data(data):\n","    # получение текущей даты\n","    current_date = datetime.today().date()\n","    current_date = f'{current_date.day}.{current_date.month}'\n","\n","    # получение температуры\n","    temperature = data['current']['temperature_2m']\n","    temperature_format = data['current_units']['temperature_2m']\n","\n","    # получение кода температуры\n","    weather_code = data['current']['weather_code']\n","\n","    # определение погоды по коду\n","    if weather_code in [0, 1]:\n","        weather = 'нет осадков, ясно'\n","    elif weather_code == 45:\n","        weather = 'нет осадков, туман'\n","    elif weather_code in [61, 63, 65 ,71 ,73, 75]:\n","        weather = 'осадки, нет тумана'\n","    else:\n","        weather = 'выгляни в окно и посмотри сам'\n","\n","    # формирование сообщения\n","    message = f'Сегодня ({current_date}) погода {temperature} {temperature_format}, {weather}'\n","\n","    return message\n","\n","\n","def main():\n","    coordinates = input('Введите ваши координаты').split(', ')\n","    url = f'https://api.open-meteo.com/v1/forecast?latitude={coordinates[0]}&longitude={coordinates[1]}&current=temperature_2m,weather_code&forecast_days=1'\n","    data = send_request(url)\n","    message = clear_data(data)\n","    print(message)\n","\n","\n","main()"],"metadata":{"id":"5Mbs40_buVRV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730370874164,"user_tz":-300,"elapsed":9156,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}},"outputId":"6c8ae211-30aa-4ea6-d5c4-91dae87a2122"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите ваши координаты52, 52\n","Сегодня (31.10) погода 5.3 °C, выгляни в окно и посмотри сам\n"]}]},{"cell_type":"markdown","source":["## Задание 2. HTTP-запросы, ответы и покемоны"],"metadata":{"id":"FYjU9WmVDoGs"}},{"cell_type":"markdown","source":["**Описание:**\n","\n","\n","Создайте код программы, которая будет взаимодействовать с API, со следующим функионалом:\n","\n","1. Используя метод GET, отправьте запрос на endpoint /pokemon, чтобы получить список первых 20 покемонов\n","\n","2. Извлеките имена покемонов из ответа и выведите их списком\n","\n","3. Введите с помощью input() название одного из покемонов\n","\n","\n","```\n","Имя покемона: clefairy\n","```\n","\n","\n","\n","4. Отправьте GET-запрос, чтобы получить полную информацию о выбранном покемоне\n","\n","5. Извлеките и выведите следующие данные о введенном покемоне:\n","\n","     • Имя\n","\n","     • Тип\n","\n","     • Вес\n","\n","     • Рост\n","\n","     • Способности\n","\n","Используйте PokéAPI (https://pokeapi.co/), который предоставляет информацию о покемонах, их характеристиках, типах и другую информацию."],"metadata":{"id":"oZ1guEbl0PZm"}},{"cell_type":"code","source":["dict_of_pok = [{'name': 'bulbasaur', 'url': 'https://pokeapi.co/api/v2/pokemon/1/'},\n","  {'name': 'ivysaur', 'url': 'https://pokeapi.co/api/v2/pokemon/2/'},\n","  {'name': 'venusaur', 'url': 'https://pokeapi.co/api/v2/pokemon/3/'},\n","  {'name': 'charmander', 'url': 'https://pokeapi.co/api/v2/pokemon/4/'},\n","  {'name': 'charmeleon', 'url': 'https://pokeapi.co/api/v2/pokemon/5/'},\n","  {'name': 'charizard', 'url': 'https://pokeapi.co/api/v2/pokemon/6/'},\n","  {'name': 'squirtle', 'url': 'https://pokeapi.co/api/v2/pokemon/7/'},\n","  {'name': 'wartortle', 'url': 'https://pokeapi.co/api/v2/pokemon/8/'},\n","  {'name': 'blastoise', 'url': 'https://pokeapi.co/api/v2/pokemon/9/'},\n","  {'name': 'caterpie', 'url': 'https://pokeapi.co/api/v2/pokemon/10/'},\n","  {'name': 'metapod', 'url': 'https://pokeapi.co/api/v2/pokemon/11/'},\n","  {'name': 'butterfree', 'url': 'https://pokeapi.co/api/v2/pokemon/12/'},                                 #ХЗ ЗАЧЕМ ЭТОТ СПИСОК\n","  {'name': 'weedle', 'url': 'https://pokeapi.co/api/v2/pokemon/13/'},\n","  {'name': 'kakuna', 'url': 'https://pokeapi.co/api/v2/pokemon/14/'},\n","  {'name': 'beedrill', 'url': 'https://pokeapi.co/api/v2/pokemon/15/'},\n","  {'name': 'pidgey', 'url': 'https://pokeapi.co/api/v2/pokemon/16/'},\n","  {'name': 'pidgeotto', 'url': 'https://pokeapi.co/api/v2/pokemon/17/'},\n","  {'name': 'pidgeot', 'url': 'https://pokeapi.co/api/v2/pokemon/18/'},\n","  {'name': 'rattata', 'url': 'https://pokeapi.co/api/v2/pokemon/19/'},\n","  {'name': 'raticate', 'url': 'https://pokeapi.co/api/v2/pokemon/20/'}]\n","\n","import requests\n","\n","\n","def main():\n","  name = input(\"Введите имя покемона: \")\n","  url = f\"https://pokeapi.co/api/v2/pokemon/{name}/\"\n","  data = send_request(url)\n","  characteristics(name, data)\n","  return\n","\n","\n","def send_request(url):\n","    response = requests.get(url)\n","\n","    status_code = response.status_code\n","    if status_code == 200:\n","        return response.json()\n","    return\n","\n","\n","def characteristics(name, data):\n","  print(f\"Имя покемона: {name}\")\n","  print(f\"Тип покемона: {data['types'][0]['type']['name']}\")\n","  print(f'Вес покемона: {data[\"weight\"]}')\n","  print(f'Рост покемона: {data[\"height\"]}')\n","  print(f\"Способности покемона: {data['abilities'][0]['ability']['name']}\")\n","  return\n","\n","\n","\n","main()\n"],"metadata":{"id":"JkFmivjp25NL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730375998062,"user_tz":-300,"elapsed":2851,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}},"outputId":"3f842b8b-a451-4d20-9956-964c2435e2e9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите имя покемона: clefairy\n","Имя покемона: clefairy\n","Тип покемона: fairy\n","Вес покемона: 75\n","Рост покемона: 6\n","Способности покемона: cute-charm\n"]}]},{"cell_type":"markdown","source":["## Задание 3. HTTP-запросы, ответы и посты"],"metadata":{"id":"Ci07uZdADue9"}},{"cell_type":"markdown","source":["**Описание:**\n","\n","Создайте программу, которая будет взаимодействовать с JSONPlaceholder API, реализуя следующие функции:\n","\n","1. Реализуйте функцию, которая выполняет GET-запрос к https://jsonplaceholder.typicode.com/posts и возвращает список постов в формате JSON\n","\n","2. Реализуйте функцию, котороая получает вводимое ID поста, выполняет GET-запрос по ID и возвращает данные поста в формате JSON\n","\n","3. Реализуйте функцию, которая выполняет обработку JSON из пункта 2 и выводит всю важную информацию в консоль"],"metadata":{"id":"h194KTer1-B3"}},{"cell_type":"code","source":["import requests\n","\n","# отправляем запрос серверу\n","def send_request():\n","  url = \"https://jsonplaceholder.typicode.com/posts\"\n","  response = requests.get(url)\n","\n","  status_code = response.status_code\n","  if status_code == 200:\n","    return response.json()\n","  return\n","\n","# поиск поста\n","def find_post():\n","  id = int(input(\"Введите id: \"))\n","  # в нашем случае id и индекс списка отличаются на единицу:\n","  data = send_request()\n","  return data[id - 1]\n","\n","# обработка json\n","def data_processing():\n","  id_data = find_post()\n","  for k, v in id_data.items():\n","    print(f\"{k}: {v}\")\n","  return\n","\n","\n","data_processing()\n","\n"],"metadata":{"id":"YANQx4o258Zn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730556589040,"user_tz":-300,"elapsed":2200,"user":{"displayName":"Данила Копьев (Ofpoil)","userId":"14884835633617481459"}},"outputId":"7294eec6-a10c-495f-dea6-73b2d7eb485b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Введите id: 3\n","userId: 1\n","id: 3\n","title: ea molestias quasi exercitationem repellat qui ipsa sit aut\n","body: et iusto sed quo iure\n","voluptatem occaecati omnis eligendi aut ad\n","voluptatem doloribus vel accusantium quis pariatur\n","molestiae porro eius odio et labore et velit aut\n"]}]},{"cell_type":"markdown","source":["## Задание 4. HTTP-запросы, ответы и работа с постами"],"metadata":{"id":"rtwepQvJDy9N"}},{"cell_type":"markdown","source":["**Описание**\n","\n","Создайте программу, которая будет взаимодействовать с JSONPlaceholder API (из предыдущего задания), реализуя новые функции:\n","\n","1. Реализуйте функцию, которая принимает заголовок, содержимое и ID пользователя (информация вводится с помощью input()), выполняет POST-запрос для создания нового поста и возвращает информацию о созданном посте в формате JSON\n","\n","\n","```\n","Заголовок: Новый пост\n","Содержимое поста: Тут должно находиться содержимое нового поста...\n","ID пользователя: 10\n","```\n","\n","\n","\n","2. Реализуйте функцию, которая принимает ID поста, новый заголовок и новое содержимое, выполняет PUT-запрос и возвращает обновлённый пост в формате JSON\n","\n","3. Реализуйте функцию, которая принимает ID поста, выполняет DELETE-запрос и возвращает статус-код ответа"],"metadata":{"id":"4MjiaxDM58ta"}},{"cell_type":"code","source":["import requests\n","from PIL import Image\n","from IPython.display import display\n","import io\n","\n","def dog_breeds(url):\n","    response = requests.get(url)\n","    status_code = response.status_code\n","\n","    if status_code in [200, 201]:\n","        return response.json()\n","    return\n","\n","url = 'https://dog.ceo/api/breeds/list/all'\n","data = dog_breeds(url)\n","all_breeds = {}\n","number = 0\n","\n","for v in data.values():\n","    if type(v) == dict:\n","        for k in v.keys():\n","            number += 1\n","            all_breeds[number] = k\n","\n","breeds = input('Введите породы собак: ').split(', ')\n","\n","for key, val in all_breeds.items():\n","    if val in breeds:\n","        print(f'Порода собаки: {val}')\n","        url = f'https://dog.ceo/api/breed/{val}/images'\n","        response = requests.get(url)\n","\n","        if response.status_code in [200, 201]:\n","              image_url = response.json()['message'][0]\n","\n","        res = requests.get(image_url)\n","        img = Image.open(io.BytesIO(res.content))\n","        display(img)"],"metadata":{"id":"jZUIdwq96DNl"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Задание 5. HTTP-запросы, ответы и пёсики"],"metadata":{"id":"0UoRc9vOD3XT"}},{"cell_type":"markdown","source":["**Описание**\n","\n","Создайте программу, которая будет взаимодействовать с Dog API, которая позволит получать список пород собак, вводить несколько пород и получать их фотогрфии.\n","\n","Этапы:\n","\n","1. Создайте функцию, которая использует метод GET и возвращает список всех пород собак в формате нумерованного списка\n","\n","2. Реализуйте возможность ввода нескольких пород собак через запятую\n","\n","\n","```\n","african, chow, dingo\n","```\n","\n","\n","\n","3. Создание функции, которая реализует запрос, возвращает и выводит изображениия собак, породы которых были введены до этого\n","\n","\n","Используйте Dog API (https://dog.ceo/dog-api/), который предоставляет информацию о породах собак и их изображения.\n"],"metadata":{"id":"y0EyPsFQ6mSZ"}},{"cell_type":"markdown","source":["*Подсказка*\n","\n","\n","\n","```\n","import requests\n","from PIL import Image\n","from IPython.display import display\n","import io\n","\n","url = <____>\n","response = <____>\n","        \n","if response.<______> == <___>:\n","      image_url = response.json()['message']\n","\n","res = requests.<__>(image_url)\n","img = Image.open(io.BytesIO(res.content))\n","display(img)\n","```\n","\n"],"metadata":{"id":"yrKv5k13AKEP"}},{"cell_type":"code","source":[],"metadata":{"id":"5xti3KRP4Kzp"},"execution_count":null,"outputs":[]}]}